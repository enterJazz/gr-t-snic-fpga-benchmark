#ifndef COMMON_H
#define COMMON_H

#include <stdint.h>

#define CONTEXT "Example"

namespace common::asym
{
    const uint8_t msg_hash_len { 32 };
    const uint8_t counter_len { 4 };
    const uint8_t sign_input_len { msg_hash_len + counter_len };

    const uint8_t attestation_len { 64 };
    const uint8_t private_key_len { 64 };
    const uint8_t public_key_len { 32 };

    void prepare_signature_input
    (
        uint8_t out_input[sign_input_len],
        uint8_t msg_hash[msg_hash_len],
        uint8_t counter_byte_array[counter_len],
        uint32_t counter
    );

    // corresponding pub and priv key pairs
    // generated via monocypher:
    // crypto_eddsa_key_pair(secret_key, public_key, eddsa_seed)
    const uint8_t pubkey[] {
        0x38, 0xce, 0xa6, 0x7a, 0x78, 0xc5, 0x8e, 0x3d,
        0xa5, 0x5c, 0x79, 0xa7, 0xe6, 0xc3, 0x3d, 0xa4,
        0xe,  0xc0, 0xe9, 0xdf, 0xe7, 0x54, 0x3a, 0x7e,
        0x23, 0xe3, 0xc3, 0xdf, 0xe4, 0xfc, 0xe2, 0x56
    };

    const uint8_t privkey[] {
        0xa6, 0xb8, 0xdc, 0x1c, 0x85, 0xcf, 0x74, 0x9e,
        0x43, 0xba, 0x6c, 0xf2, 0x7d, 0x3b, 0x28, 0x80,
        0x73, 0x46, 0x34, 0xe7, 0xc4, 0xd7, 0xb1, 0xbc,
        0xd5, 0xe5, 0xa2, 0xc7, 0x9d, 0xb6, 0x80, 0xd2,
        0x38, 0xce, 0xa6, 0x7a, 0x78, 0xc5, 0x8e, 0x3d,
        0xa5, 0x5c, 0x79, 0xa7, 0xe6, 0xc3, 0x3d, 0xa4,
        0xe,  0xc0, 0xe9, 0xdf, 0xe7, 0x54, 0x3a, 0x7e,
        0x23, 0xe3, 0xc3, 0xdf, 0xe4, 0xfc, 0xe2, 0x56
    };
}

#endif
